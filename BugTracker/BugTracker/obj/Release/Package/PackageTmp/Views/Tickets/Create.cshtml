@using Microsoft.AspNet.Identity
@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Tickets";
}
<div class="row" style="padding-top: 15px;">

    <div class="col-md-10 col-md-offset-1">
        <div class="panel panel-primary">

            <div class="panel-heading">
                <h2><b>Create Ticket</b></h2>
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <br />
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(model => model.Description, 5, 70, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Project", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.SubmitterId, "SubmitterId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("SubmitterId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SubmitterId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @if (User.IsInRole("Administrator") || User.IsInRole("Project Manager"))
                    {
                        <div class="form-group">
                            @Html.Label("Assigned To", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.DropDownList("AssignedUserId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssignedUserId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>

            <div class="col-md-offset-1">
                @Html.ActionLink("Back to List", "Index")
            </div>
